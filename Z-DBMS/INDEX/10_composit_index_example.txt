-- ===============================
-- Logical B+ Tree (txn.roll,id) ASC, Multi-Level, Full Draw
-- ===============================

                               [ (3,5) | (5,5) ] Root
                              /           |           \
                 [ (2,2) ]               [ (4,2) ]     [ (6,3) ]   -- Intermediate Nodes
                /       \               /       \       /       \
        Leaf1          Leaf2       Leaf3      Leaf4  Leaf5     Leaf6

==========================================
Leaf1: [ (1,1),(1,2),(2,1),(2,2) ]
Leaf2: [ (3,1),(3,2),(3,3),(3,4),(3,5) ]
Leaf3: [ (4,1),(4,2) ]
Leaf4: [ (5,1),(5,2),(5,3),(5,4),(5,5) ]
Leaf5: [ (5,6),(5,7),(5,8),(5,9),(5,10),(6,1),(6,2),(6,3) ]
Leaf6: [ (6,4),(6,5),(6,6),(7,1),(7,2) ]
==========================================

-- Leaf Nodes are linked sequentially for range scan:
Leaf1 -> Leaf2 -> Leaf3 -> Leaf4 -> Leaf5 -> Leaf6 -> NULL

-- ===============================
-- âœ… Range Query Example: roll=5 AND id BETWEEN 3 AND 8
-- Scan Path:
-- 1. Root: (5,3) â‰¥ (3,5) â†’ go Leaf4 & Leaf5
-- 2. Leaf Scan:
--    Leaf4: (5,3),(5,4),(5,5)
--    Leaf5: (5,6),(5,7),(5,8)
-- 3. Stop at (5,9) â†’ outside range
-- 4. Fetch heap rows via TIDs

ðŸ”¹...........................................................................................................................ðŸ”¹

-- ===============================
-- Logical B+ Tree (txn.roll,id) DESC, Multi-Level, Full Draw
-- ===============================

                               [ (5,9) | (3,5) ] Root
                              /           |           \
                 [ (6,3) ]               [ (5,5) ]     [ (3,2) ]   -- Intermediate Nodes
                /       \               /       \       /       \
        Leaf1          Leaf2       Leaf3      Leaf4  Leaf5     Leaf6

-- ===============================
-- Leaf Nodes (DESC order, each leaf stores tuples descending by id)
-- ===============================

Leaf1: [(7,2),(7,1),(6,6),(6,5),(6,4)]
Leaf2: [(6,3),(6,2),(6,1),(5,10),(5,9)]
Leaf3: [(5,8),(5,7),(5,6),(5,5),(5,4)]
Leaf4: [(5,3),(5,2),(5,1),(4,2),(4,1)]
Leaf5: [(3,5),(3,4),(3,3),(3,2),(3,1)]
Leaf6: [(2,2),(2,1),(1,2),(1,1)]

-- Leaf Links (for sequential scan in descending order):
Leaf1 -> Leaf2 -> Leaf3 -> Leaf4 -> Leaf5 -> Leaf6 -> NULL

-- ===============================
-- âœ… DESC Query Example: roll=5 ORDER BY id DESC LIMIT 5
-- Scan Path:
-- 1. Root â†’ descend to Leaf2 (largest keys for roll=5)
-- 2. Scan Leaf2: (5,10),(5,9)
-- 3. Continue to Leaf3: (5,8),(5,7),(5,6)
-- 4. LIMIT 5 reached â†’ stop
-- 5. Fetch heap rows via TIDs













